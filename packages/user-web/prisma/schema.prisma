generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id   String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String
  menu menu[]
}

model menu {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  categoryId String      @db.Uuid
  name       String
  price      Int
  image      String
  category   category    @relation(fields: [categoryId], references: [id])
  cartItem   cartItem[]
  orderItem  orderItem[]
}

model user {
  id                          String     @id
  name                        String
  password                    String
  usingCartId                 String?    @db.Uuid
  created_at                  DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at                  DateTime?  @default(now()) @db.Timestamptz(6)
  cart_cartTouser_usingCartId cart?      @relation("cartTouser_usingCartId", fields: [usingCartId], references: [id])
  cart                        cart[]
  cartItem                    cartItem[]
  order                       order[]
  userCart                    userCart[]
}

model cartItem {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  menuId      String    @db.Uuid
  addedUserId String
  quantity    Int
  cartId      String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  user        user      @relation(fields: [addedUserId], references: [id])
  cart        cart      @relation(fields: [cartId], references: [id])
  menu        menu      @relation(fields: [menuId], references: [id])
}

model order {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderedUserId String
  orderedAt     DateTime    @default(now()) @db.Timestamptz(6)
  totalPrice    Int
  updated_at    DateTime?   @default(now()) @db.Timestamptz(6)
  user          user        @relation(fields: [orderedUserId], references: [id])
  orderItem     orderItem[]
}

model cart {
  id                          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                        String     @unique
  creatorId                   String
  createdTime                 DateTime?  @default(now()) @db.Timestamptz(6)
  updatedTime                 DateTime?  @default(now()) @db.Timestamptz(6)
  user                        user       @relation(fields: [creatorId], references: [id])
  cartItem                    cartItem[]
  user_cartTouser_usingCartId user[]     @relation("cartTouser_usingCartId")
  userCart                    userCart[]
}

model orderItem {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId    String   @db.Uuid
  menuId     String   @db.Uuid
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  menu       menu     @relation(fields: [menuId], references: [id])
  order      order    @relation(fields: [orderId], references: [id])
}

model userCart {
  id         String    @id @db.Uuid
  userId     String
  cartId     String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  cart       cart      @relation(fields: [cartId], references: [id])
  user       user      @relation(fields: [userId], references: [id])
}
